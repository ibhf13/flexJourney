rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isUserOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if we're in development mode
    function isDevelopment() {
      return 'development' in request.resource.data && request.resource.data.development == true;
    }

    match /users/{userId} {
      allow read: if isUserOwner(userId);
      allow create: if isUserOwner(userId);
      allow update: if isUserOwner(userId) && 
                   request.resource.data.keys().hasAll(['updatedAt']);
      allow delete: if isUserOwner(userId);
    }

    match /trainingHistory/{historyId} {
      allow read, write: if isUserOwner(historyId);
    }

    // User stats collection (includes streak data)
    match /userStats/{userId} {
      allow read: if request.auth != null;
      // Allow write operations only in development environment
      allow write: if request.auth != null && 
                  (resource == null || resource.data.development == true) && 
                  request.resource.data.development == true;
    }

    // Public exercise data
    match /exercises/{exerciseId} {
      allow read: if isAuthenticated();
      allow write: if true;
    }

    // Workout plans collection
    match /workoutPlans/{planId} {
      allow read: if isAuthenticated();
      allow write: if isDevelopment() || request.auth.token.admin == true;
    }
  }
}